// <auto-generated />
using System;
using BurgerApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BurgerApp.DataAccess.Migrations
{
    [DbContext(typeof(BurgerAppDbContext))]
    [Migration("20240804191234_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BurgerApp.Domain.Burger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("HasFries")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Burger");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasFries = true,
                            IsVegan = false,
                            IsVegetarian = false,
                            Name = "Hamburger",
                            Price = 2.9900000000000002
                        },
                        new
                        {
                            Id = 2,
                            HasFries = true,
                            IsVegan = false,
                            IsVegetarian = false,
                            Name = "Cheeseburger",
                            Price = 3.7000000000000002
                        },
                        new
                        {
                            Id = 3,
                            HasFries = true,
                            IsVegan = false,
                            IsVegetarian = false,
                            Name = "Chickenburger",
                            Price = 3.7999999999999998
                        },
                        new
                        {
                            Id = 4,
                            HasFries = false,
                            IsVegan = false,
                            IsVegetarian = true,
                            Name = "Veggieburger",
                            Price = 2.7000000000000002
                        },
                        new
                        {
                            Id = 5,
                            HasFries = false,
                            IsVegan = true,
                            IsVegetarian = true,
                            Name = "Veganburger",
                            Price = 1.8999999999999999
                        });
                });

            modelBuilder.Entity("BurgerApp.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosesAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpensAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ul.Makedonija",
                            ClosesAt = new DateTime(2024, 8, 4, 22, 0, 0, 0, DateTimeKind.Local),
                            Name = "MacShop",
                            OpensAt = new DateTime(2024, 8, 4, 8, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            Address = "Chinatown",
                            ClosesAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "ChinaShop",
                            OpensAt = new DateTime(2024, 8, 4, 8, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("BurgerApp.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Partizanski Odredi BB",
                            FullName = "Murat Koca",
                            IsDelivered = true,
                            LocationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ilindenska BB",
                            FullName = "Radica Shvigir",
                            IsDelivered = true,
                            LocationId = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Guangzhou 11",
                            FullName = "Jack Man",
                            IsDelivered = false,
                            LocationId = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Manhattan 23",
                            FullName = "John Legends",
                            IsDelivered = false,
                            LocationId = 2
                        });
                });

            modelBuilder.Entity("BurgerApp.Domain.OrderBurger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BurgerId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BurgerId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderBurgers");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            BurgerId = 3,
                            OrderId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 101,
                            BurgerId = 4,
                            OrderId = 1,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 102,
                            BurgerId = 1,
                            OrderId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 103,
                            BurgerId = 2,
                            OrderId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 104,
                            BurgerId = 3,
                            OrderId = 3,
                            Quantity = 6
                        },
                        new
                        {
                            Id = 105,
                            BurgerId = 5,
                            OrderId = 4,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("BurgerApp.Domain.Order", b =>
                {
                    b.HasOne("BurgerApp.Domain.Location", "Location")
                        .WithMany("Orders")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("BurgerApp.Domain.OrderBurger", b =>
                {
                    b.HasOne("BurgerApp.Domain.Burger", "Burger")
                        .WithMany("OrderBurgers")
                        .HasForeignKey("BurgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerApp.Domain.Order", "Order")
                        .WithMany("OrderBurgers")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Burger");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BurgerApp.Domain.Burger", b =>
                {
                    b.Navigation("OrderBurgers");
                });

            modelBuilder.Entity("BurgerApp.Domain.Location", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BurgerApp.Domain.Order", b =>
                {
                    b.Navigation("OrderBurgers");
                });
#pragma warning restore 612, 618
        }
    }
}
